// ============================================================================
// üì¶ SEZIONE IMPORTAZIONI
// ============================================================================
// In questa sezione importiamo tutte le librerie e i file necessari

import { useState, useEffect } from 'react'
// Importiamo due "Hook" fondamentali dalla libreria React:
// - useState: permette di creare variabili che React "osserva" e ri-renderizza quando cambiano
// - useEffect: permette di eseguire codice in risposta a eventi (es. caricamento componente)

import reactLogo from './assets/react.svg'
// Importiamo l'immagine del logo React dalla cartella assets
// (Non usata in questo esempio, ma disponibile per uso futuro)

import viteLogo from '/vite.svg'
// Importiamo l'immagine del logo Vite dalla cartella pubblica
// (Non usata in questo esempio, ma disponibile per uso futuro)

import './App.css'
// Importiamo il foglio di stile CSS per dare aspetto grafico al componente
// Tutti gli stili definiti in App.css verranno applicati a questo componente




// ============================================================================
// üìö DOCUMENTAZIONE: CONCETTI FONDAMENTALI DI REACT
// ============================================================================

// ----------------------------------------------------------------------------
// Concetto 1Ô∏è‚É£: Cosa sono gli HOOKS?
// ----------------------------------------------------------------------------
// Gli Hook sono funzioni speciali di React che iniziano con "use" (es. useState, useEffect)
// Permettono di "agganciare" funzionalit√† avanzate ai componenti funzionali:
// - Gestire lo stato (useState)
// - Eseguire effetti collaterali (useEffect)
// - Gestire il contesto (useContext)
// - E molti altri...
//
// STORIA: Prima degli Hook (introdotti in React 16.8 nel 2019), solo i 
// "componenti classe" potevano avere uno stato interno. Gli Hook hanno 
// semplificato molto il codice React!

// ----------------------------------------------------------------------------
// Concetto 2Ô∏è‚É£: Cosa sono i COMPONENTI?
// ----------------------------------------------------------------------------
// Un componente React √® un "pezzo riutilizzabile" di interfaccia utente (UI)
// Pensalo come un mattoncino LEGO üß±:
// - Ogni componente ha una funzione specifica (es. bottone, form, lista)
// - Puoi combinare pi√π componenti per creare interfacce complesse
// - Puoi riutilizzare lo stesso componente in pi√π parti dell'app
//
// TIPI DI COMPONENTI:
// - Componenti funzionali: semplici funzioni JavaScript che restituiscono JSX
// - Componenti classe: classi ES6 (approccio pi√π vecchio, meno usato oggi)

// ----------------------------------------------------------------------------
// Concetto 3Ô∏è‚É£: Come funziona useState?
// ----------------------------------------------------------------------------
// useState √® un Hook che permette di creare una "variabile di stato"
//
// SINTASSI:
// const [variabile, setVariabile] = useState(valoreIniziale)
//
// SPIEGAZIONE:
// - "variabile" = contiene il valore CORRENTE dello stato
// - "setVariabile" = funzione per AGGIORNARE lo stato
// - "valoreIniziale" = il valore di partenza (es. 0, "", [], {})
//
// IMPORTANTE: Quando chiami setVariabile(nuovoValore), React:
// 1. Aggiorna il valore della variabile
// 2. Ri-renderizza (ri-disegna) automaticamente il componente
// 3. Mostra i nuovi dati sullo schermo




// ============================================================================
// üéØ COMPONENTE PRINCIPALE: App
// ============================================================================
// Questo √® il componente "radice" dell'applicazione
// √à una funzione JavaScript che restituisce JSX (simile a HTML)

function App() {
  
  
  // ==========================================================================
  // üì° SEZIONE 1: CONFIGURAZIONE ENDPOINT API
  // ==========================================================================
  // Gli endpoint sono gli "indirizzi web" da cui scarichiamo i dati
  // In questo caso usiamo JSONPlaceholder, un'API di test gratuita
  
  const photoUrl = 'https://jsonplaceholder.typicode.com/photos?_limit=10'
  // URL per ottenere un elenco di FOTO
  // "_limit=10" limita i risultati a solo 10 foto (invece di centinaia)
  
  const albumUrl = 'https://jsonplaceholder.typicode.com/albums?_limit=10'
  // URL per ottenere un elenco di ALBUM
  // Ogni album pu√≤ contenere pi√π foto
  
  const userUrl = 'https://jsonplaceholder.typicode.com/users?_limit=10'
  // URL per ottenere un elenco di UTENTI
  // Gli utenti sono i "proprietari" degli album e delle foto
  
  
  
  
  // ==========================================================================
  // üíæ SEZIONE 2: DICHIARAZIONE DELLO STATO (State Management)
  // ==========================================================================
  // Qui dichiariamo tutte le variabili di stato del componente
  // Lo "stato" √® l'insieme dei dati che possono cambiare nel tempo
  
  // ‚ö†Ô∏è REGOLA FONDAMENTALE DEGLI HOOK:
  // Gli Hook devono SEMPRE essere chiamati:
  // - All'interno della funzione principale del componente
  // - Nello stesso ordine ad ogni render
  // - MAI dentro cicli, condizioni o funzioni annidate
  
  // --------------------------------------------------------------------------
  // Stato 1Ô∏è‚É£: PHOTOS (Foto)
  // --------------------------------------------------------------------------
  const [photos, setPhotos] = useState([])
  // SPIEGAZIONE RIGA PER RIGA:
  // - photos = variabile che CONTIENE l'array delle foto
  // - setPhotos = funzione per MODIFICARE l'array delle foto
  // - useState([]) = inizializza photos come array VUOTO []
  //
  // CICLO DI VITA:
  // 1. Inizialmente: photos = []
  // 2. Dopo fetch: setPhotos(datiDalServer) ‚Üí photos = [{foto1}, {foto2}, ...]
  // 3. React ri-renderizza il componente e mostra le foto
  
  // --------------------------------------------------------------------------
  // Stato 2Ô∏è‚É£: ALBUMS (Album)
  // --------------------------------------------------------------------------
  const [albums, setAlbums] = useState([])
  // albums = variabile che contiene l'array degli album (inizialmente vuoto)
  // setAlbums = funzione per aggiornare l'array degli album
  // Funziona esattamente come photos, ma per i dati degli album
  
  // --------------------------------------------------------------------------
  // Stato 3Ô∏è‚É£: USERS (Utenti)
  // --------------------------------------------------------------------------
  const [users, setUsers] = useState([])
  // users = variabile che contiene l'array degli utenti (inizialmente vuoto)
  // setUsers = funzione per aggiornare l'array degli utenti
  // Funziona esattamente come photos, ma per i dati degli utenti
  
  
  
  
  // ==========================================================================
  // ‚ö° SEZIONE 3: EFFETTI COLLATERALI (Side Effects)
  // ==========================================================================
  // In questa sezione usiamo useEffect per caricare i dati dalle API
  // quando il componente viene montato (appare per la prima volta)
  
  useEffect(() => {
    // useEffect √® un Hook che esegue codice in risposta a eventi specifici
    // In questo caso: "quando il componente appare per la prima volta"
    
    
    // ------------------------------------------------------------------------
    // üì∏ Funzione Asincrona 1: getPhotos
    // ------------------------------------------------------------------------
    // Questa funzione scarica i dati delle FOTO dall'API
    
    const getPhotos = async () => {
      // "async" rende questa funzione asincrona
      // Significa che pu√≤ "aspettare" operazioni che richiedono tempo (es. fetch)
      // senza bloccare il resto del programma
      
      try {
        // "try" avvia un blocco di codice che potrebbe generare errori
        // Se tutto va bene, il codice qui dentro viene eseguito normalmente
        
        // PASSO 1: Richiesta HTTP al server
        const response = await fetch(photoUrl)
        // fetch(photoUrl) = invia una richiesta GET all'URL delle foto
        // "await" = "aspetta che fetch finisca prima di continuare"
        // response = oggetto che contiene la risposta del server
        //            (include header, status code, body, ecc.)
        
        // PASSO 2: Conversione della risposta in JSON
        const data = await response.json()
        // response.json() = trasforma il corpo della risposta (formato JSON)
        //                   in un oggetto/array JavaScript utilizzabile
        // "await" = "aspetta che la conversione sia completata"
        // data = ora contiene l'array di 10 foto [{...}, {...}, ...]
        
        // PASSO 3: Salvataggio dei dati nello stato
        setPhotos(data)
        // Chiamiamo setPhotos per aggiornare la variabile "photos"
        // Questo:
        // 1. Aggiorna photos con i nuovi dati
        // 2. Dice a React: "photos √® cambiato, ri-renderizza il componente!"
        // 3. React ri-esegue la funzione App() e mostra le foto
        
      } catch (error) {
        // "catch" cattura qualsiasi errore che si verifica nel blocco "try"
        // Esempi di errori:
        // - Nessuna connessione internet
        // - Server non raggiungibile (errore 500, 404, ecc.)
        // - Formato JSON non valido
        // - URL sbagliato
        
        console.error('Errore nel caricamento delle foto:', error)
        // Stampiamo l'errore nella console del browser (F12)
        // Questo √® fondamentale per il debugging (trovare e risolvere problemi)
        // In produzione, potresti voler mostrare un messaggio all'utente
      }
      
    }
    // Fine della definizione della funzione getPhotos
    // NOTA: definire una funzione NON la esegue! Dobbiamo chiamarla pi√π avanti
    
    
    // ------------------------------------------------------------------------
    // üìö Funzione Asincrona 2: getAlbums
    // ------------------------------------------------------------------------
    // Questa funzione scarica i dati degli ALBUM dall'API
    // Funziona esattamente come getPhotos, ma per gli album
    
    const getAlbums = async () => {
      // Funzione asincrona per caricare gli album
      
      try {
        // Tentativo di caricare i dati
        
        const response = await fetch(albumUrl)
        // Inviamo una richiesta GET all'URL degli album
        // Aspettiamo la risposta del server
        
        const data = await response.json()
        // Convertiamo la risposta in un array JavaScript
        // Aspettiamo che la conversione sia completata
        
        setAlbums(data)
        // Salviamo i dati nello stato "albums"
        // React ri-renderizza il componente
        
      } catch (error) {
        // Se qualcosa va storto, gestiamo l'errore
        
        console.error('Errore nel caricamento degli album:', error)
        // Stampiamo l'errore nella console per il debugging
      }
      
    }
    // Fine della definizione della funzione getAlbums
    
    
    // ------------------------------------------------------------------------
    // üë• Funzione Asincrona 3: getUsers
    // ------------------------------------------------------------------------
    // Questa funzione scarica i dati degli UTENTI dall'API
    // Funziona esattamente come getPhotos e getAlbums, ma per gli utenti
    
    const getUsers = async () => {
      // Funzione asincrona per caricare gli utenti
      
      try {
        // Tentativo di caricare i dati
        
        const response = await fetch(userUrl)
        // Inviamo una richiesta GET all'URL degli utenti
        // Aspettiamo la risposta del server
        
        const data = await response.json()
        // Convertiamo la risposta in un array JavaScript
        // Aspettiamo che la conversione sia completata
        
        setUsers(data)
        // Salviamo i dati nello stato "users"
        // React ri-renderizza il componente
        
      } catch (error) {
        // Se qualcosa va storto, gestiamo l'errore
        
        console.error('Errore nel caricamento degli utenti:', error)
        // Stampiamo l'errore nella console per il debugging
      }
      
    }
    // Fine della definizione della funzione getUsers
    
    
    // ------------------------------------------------------------------------
    // üöÄ Esecuzione delle Funzioni
    // ------------------------------------------------------------------------
    // Ora che abbiamo DEFINITO le tre funzioni, le CHIAMIAMO per eseguirle
    
    getPhotos()
    // Chiama getPhotos() ‚Üí scarica le foto dall'API
    
    getAlbums()
    // Chiama getAlbums() ‚Üí scarica gli album dall'API
    
    getUsers()
    // Chiama getUsers() ‚Üí scarica gli utenti dall'API
    
    // ‚ö° NOTA IMPORTANTE:
    // Queste tre chiamate vengono eseguite in PARALLELO (contemporaneamente)
    // Non aspettano l'una l'altra, quindi il caricamento √® pi√π veloce!
    // Se volessimo eseguirle in sequenza, dovremmo usare "await" prima di ogni chiamata
    
  }, [])
  // ‚ö†Ô∏è ARRAY DELLE DIPENDENZE: [] (vuoto)
  // Questa √® la parte PI√ô IMPORTANTE di useEffect!
  //
  // SPIEGAZIONE:
  // - [] vuoto = "esegui questo useEffect SOLO UNA VOLTA"
  //              precisamente: dopo il primo render del componente
  //
  // ALTERNATIVE (da NON usare in questo caso):
  // - Nessun array = useEffect si esegue AD OGNI RENDER
  //                  ‚Üí LOOP INFINITO! ‚ö†Ô∏è Da evitare!
  // - [photos] = useEffect si esegue quando "photos" cambia
  //              ‚Üí Utile per "reagire" a cambiamenti di dati specifici
  // - [photos, albums] = useEffect si esegue quando "photos" O "albums" cambiano
  //
  // PERCH√â [] IN QUESTO CASO?
  // Vogliamo caricare i dati solo all'inizio, non ogni volta che qualcosa cambia!
  
  
  
  
  // ==========================================================================








  

  // ============================================================================
// üé® SEZIONE 4: RENDERING (Interfaccia Utente)
// ============================================================================
// Questa sezione definisce COSA viene visualizzato sullo schermo
// Usiamo JSX, una sintassi simile a HTML ma con "superpoteri" JavaScript


return (
  // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
  // ‚îÇ RETURN                                                              ‚îÇ
  // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
  // ‚îÇ La keyword "return" restituisce il JSX che verr√† mostrato           ‚îÇ
  // ‚îÇ nel browser. Tutto ci√≤ che √® qui dentro diventer√† HTML visibile.    ‚îÇ
  // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
  
  
  <>
    {/* 
      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
      ‚îÇ FRAGMENT REACT: <> </>                                            ‚îÇ
      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
      ‚îÇ Un Fragment √® un "contenitore invisibile" che permette di         ‚îÇ
      ‚îÇ restituire pi√π elementi JSX senza aggiungere un <div> inutile     ‚îÇ
      ‚îÇ nel DOM (Document Object Model = struttura HTML della pagina).    ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ FORMA COMPLETA:    <React.Fragment> </React.Fragment>             ‚îÇ
      ‚îÇ FORMA ABBREVIATA:  <> </>  (quella che usiamo qui)                ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ PERCH√â √à UTILE?                                                   ‚îÇ
      ‚îÇ React richiede che un componente restituisca UN SOLO elemento     ‚îÇ
      ‚îÇ radice. Se vogliamo restituire pi√π elementi (h1, form, ul...),    ‚îÇ
      ‚îÇ dobbiamo racchiuderli in qualcosa. Il Fragment lo fa senza        ‚îÇ
      ‚îÇ aggiungere nodi extra nel DOM.                                    ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ ESEMPIO SENZA FRAGMENT (‚ùå errore):                               ‚îÇ
      ‚îÇ   return (                                                        ‚îÇ
      ‚îÇ     <h1>Titolo</h1>                                               ‚îÇ
      ‚îÇ     <p>Paragrafo</p>  ‚Üê Errore! Due elementi alla radice         ‚îÇ
      ‚îÇ   )                                                               ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ ESEMPIO CON DIV (‚úÖ funziona ma aggiunge un div inutile):        ‚îÇ
      ‚îÇ   return (                                                        ‚îÇ
      ‚îÇ     <div>              ‚Üê Questo div finisce nel DOM              ‚îÇ
      ‚îÇ       <h1>Titolo</h1>                                             ‚îÇ
      ‚îÇ       <p>Paragrafo</p>                                            ‚îÇ
      ‚îÇ     </div>                                                        ‚îÇ
      ‚îÇ   )                                                               ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ ESEMPIO CON FRAGMENT (‚úÖ perfetto, nessun elemento extra):       ‚îÇ
      ‚îÇ   return (                                                        ‚îÇ
      ‚îÇ     <>                ‚Üê Invisibile nel DOM                       ‚îÇ
      ‚îÇ       <h1>Titolo</h1>                                             ‚îÇ
      ‚îÇ       <p>Paragrafo</p>                                            ‚îÇ
      ‚îÇ     </>                                                           ‚îÇ
      ‚îÇ   )                                                               ‚îÇ
      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    */}
    
    
    
    
    {/* ====================================================================
        üìã SEZIONE 1: Titolo Principale della Pagina
        ==================================================================== */}
    
    <h1>Albums</h1>
    {/* 
      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
      ‚îÇ ELEMENTO H1 (Heading 1)                                           ‚îÇ
      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
      ‚îÇ H1 = il titolo pi√π importante della pagina (heading di livello 1) ‚îÇ
      ‚îÇ In una pagina dovrebbe esserci UN SOLO H1 (best practice SEO).    ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ GERARCH√åA DEI TITOLI:                                             ‚îÇ
      ‚îÇ H1 ‚Üí titolo principale (pi√π grande e importante)                  ‚îÇ
      ‚îÇ H2 ‚Üí sotto-titoli di sezione                                      ‚îÇ
      ‚îÇ H3 ‚Üí sotto-sotto-titoli                                           ‚îÇ
      ‚îÇ ... fino a H6 (raramente usato)                                   ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ In questo caso mostra semplicemente il testo "Albums".            ‚îÇ
      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    */}
    
    
    
    
    {/* ====================================================================
        üìù SEZIONE 2: Form per Selezionare un Album
        ==================================================================== */}
    
    <form>
      {/* 
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ ELEMENTO FORM                                                   ‚îÇ
        ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        ‚îÇ FORM = contenitore per elementi di input dell'utente:          ‚îÇ
        ‚îÇ - <input>    ‚Üí campi di testo, checkbox, radio button, ecc.    ‚îÇ
        ‚îÇ - <select>   ‚Üí menu a tendina (dropdown)                       ‚îÇ
        ‚îÇ - <textarea> ‚Üí area di testo multi-riga                        ‚îÇ
        ‚îÇ - <button>   ‚Üí pulsanti                                        ‚îÇ
        ‚îÇ                                                                 ‚îÇ
        ‚îÇ FUNZIONALIT√Ä CLASSICHE DI UN FORM (non usate in questo esempio):‚îÇ
        ‚îÇ - action="url" ‚Üí dove inviare i dati quando si fa "submit"    ‚îÇ
        ‚îÇ - method="POST" ‚Üí come inviare i dati (POST/GET)              ‚îÇ
        ‚îÇ - onSubmit={funzione} ‚Üí cosa fare quando l'utente invia il form‚îÇ
        ‚îÇ                                                                 ‚îÇ
        ‚îÇ In questo caso, il form contiene solo un <select> per         ‚îÇ
        ‚îÇ scegliere un album. Non c'√® logica di invio (per ora).        ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      */}
      
      
      <div>
        {/* 
          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
          ‚îÇ ELEMENTO DIV                                                  ‚îÇ
          ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
          ‚îÇ DIV = contenitore generico senza significato semantico.      ‚îÇ
          ‚îÇ Serve per raggruppare altri elementi per scopi di layout     ‚îÇ
          ‚îÇ o stile CSS.                                                  ‚îÇ
          ‚îÇ                                                               ‚îÇ
          ‚îÇ In questo caso raggruppa la <label> e il <select>.           ‚îÇ
          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        */}
        
        
        {/* --------------------------------------------------------------
            üè∑Ô∏è Label (Etichetta) per il Select
            -------------------------------------------------------------- */}
        
        <label htmlFor="album">
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO LABEL                                              ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ LABEL = etichetta testuale che descrive un campo di input. ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ATTRIBUTO htmlFor:                                          ‚îÇ
            ‚îÇ - Collega questa label a un elemento di input specifico    ‚îÇ
            ‚îÇ - In HTML normale si usa "for", ma in React si usa         ‚îÇ
            ‚îÇ   "htmlFor" perch√© "for" √® una keyword riservata in JS     ‚îÇ
            ‚îÇ   (usata nei cicli: for(let i=0; i<10; i++))               ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ COME FUNZIONA IL COLLEGAMENTO:                             ‚îÇ
            ‚îÇ <label htmlFor="album"> ‚Üí cerca un elemento con id="album" ‚îÇ
            ‚îÇ <select id="album">     ‚Üí questo √® l'elemento collegato    ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ VANTAGGI DEL COLLEGAMENTO:                                 ‚îÇ
            ‚îÇ 1. USABILIT√Ä:                                              ‚îÇ
            ‚îÇ    Quando l'utente clicca sulla label, il focus va         ‚îÇ
            ‚îÇ    automaticamente sul <select> associato. Rende pi√π       ‚îÇ
            ‚îÇ    facile interagire, specialmente su dispositivi mobili.  ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 2. ACCESSIBILIT√Ä:                                          ‚îÇ
            ‚îÇ    Gli screen reader (lettori di schermo per non vedenti)  ‚îÇ
            ‚îÇ    leggono la label quando l'utente naviga sul campo.      ‚îÇ
            ‚îÇ    Esempio: "Scegli un album: menu a tendina"              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO PRATICO:                                           ‚îÇ
            ‚îÇ Prova a cliccare sulle parole "Scegli un album:" ‚Üí         ‚îÇ
            ‚îÇ il menu a tendina si aprir√† automaticamente!               ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          Scegli un album:
          {/* Questo √® il testo visibile della label */}
          
        </label>
        
        
        
        
        {/* --------------------------------------------------------------
            üìã Select (Menu a Tendina) per gli Album
            -------------------------------------------------------------- */}
        
        <select name="album" id="album">
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO SELECT (Menu a Tendina / Dropdown)                ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ SELECT = crea un menu a tendina dove l'utente pu√≤          ‚îÇ
            ‚îÇ scegliere una sola opzione tra molte.                      ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ATTRIBUTI:                                                  ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 1. name="album"                                             ‚îÇ
            ‚îÇ    - Nome del campo, usato quando si invia il form a un    ‚îÇ
            ‚îÇ      server o quando si gestisce il form con JavaScript    ‚îÇ
            ‚îÇ    - Se il form viene inviato, i dati saranno: album=5     ‚îÇ
            ‚îÇ      (dove 5 √® il value dell'opzione selezionata)          ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 2. id="album"                                               ‚îÇ
            ‚îÇ    - Identificatore UNICO di questo elemento nella pagina  ‚îÇ
            ‚îÇ    - Collegato alla label tramite htmlFor="album"          ‚îÇ
            ‚îÇ    - Pu√≤ essere usato anche in CSS o JavaScript per        ‚îÇ
            ‚îÇ      selezionare questo specifico elemento                 ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ FUNZIONAMENTO:                                             ‚îÇ
            ‚îÇ Quando l'utente clicca sul select:                         ‚îÇ
            ‚îÇ 1. Si apre un elenco di opzioni                            ‚îÇ
            ‚îÇ 2. L'utente clicca su un'opzione                           ‚îÇ
            ‚îÇ 3. Il menu si chiude e mostra l'opzione scelta             ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Le opzioni (<option>) vengono generate dinamicamente       ‚îÇ
            ‚îÇ dall'array "albums" usando il metodo .map()                ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* ------------------------------------------------------------
              üîÑ Iterazione (Ciclo) sull'Array "albums"
              ------------------------------------------------------------ */}
          
          {albums.map(album => (
            // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            // ‚îÇ METODO .map()                                             ‚îÇ
            // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            // ‚îÇ .map() √® un metodo degli array che:                      ‚îÇ
            // ‚îÇ 1. CICLA su ogni elemento dell'array                     ‚îÇ
            // ‚îÇ 2. ESEGUE una funzione per ogni elemento                 ‚îÇ
            // ‚îÇ 3. RESTITUISCE un nuovo array con i risultati            ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ SINTASSI:                                                 ‚îÇ
            // ‚îÇ array.map(elemento => {                                   ‚îÇ
            // ‚îÇ   // codice da eseguire per ogni elemento                ‚îÇ
            // ‚îÇ   return risultato;                                       ‚îÇ
            // ‚îÇ })                                                        ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ PARAMETRI:                                                ‚îÇ
            // ‚îÇ - album = l'elemento CORRENTE del ciclo                  ‚îÇ
            // ‚îÇ           (un oggetto con propriet√†: id, title, userId)  ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ ESEMPIO CON DATI REALI:                                  ‚îÇ
            // ‚îÇ Se albums = [                                             ‚îÇ
            // ‚îÇ   {id: 1, title: "Album Vacanze", userId: 1},            ‚îÇ
            // ‚îÇ   {id: 2, title: "Album Compleanno", userId: 1},         ‚îÇ
            // ‚îÇ   {id: 3, title: "Album Natale", userId: 2}              ‚îÇ
            // ‚îÇ ]                                                         ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ Allora .map() esegue la funzione 3 volte:                ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ PRIMA ITERAZIONE:                                        ‚îÇ
            // ‚îÇ   album = {id: 1, title: "Album Vacanze", userId: 1}     ‚îÇ
            // ‚îÇ   Crea: <option value="1" key="1">Album Vacanze</option> ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ SECONDA ITERAZIONE:                                      ‚îÇ
            // ‚îÇ   album = {id: 2, title: "Album Compleanno", userId: 1}  ‚îÇ
            // ‚îÇ   Crea: <option value="2" key="2">                       ‚îÇ
            // ‚îÇ           Album Compleanno                                ‚îÇ
            // ‚îÇ         </option>                                         ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ TERZA ITERAZIONE:                                        ‚îÇ
            // ‚îÇ   album = {id: 3, title: "Album Natale", userId: 2}      ‚îÇ
            // ‚îÇ   Crea: <option value="3" key="3">Album Natale</option>  ‚îÇ
            // ‚îÇ                                                           ‚îÇ
            // ‚îÇ RISULTATO FINALE:                                        ‚îÇ
            // ‚îÇ Vengono create 3 opzioni nel menu a tendina, una per     ‚îÇ
            // ‚îÇ ogni album nell'array.                                   ‚îÇ
            // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            
            
            <option value={album.id} key={album.id}>
              {/* 
                ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                ‚îÇ ELEMENTO OPTION                                       ‚îÇ
                ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
                ‚îÇ OPTION = una singola voce nel menu a tendina.        ‚îÇ
                ‚îÇ Ogni <option> rappresenta una scelta possibile.      ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ ATTRIBUTI:                                            ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ 1. value={album.id}                                   ‚îÇ
                ‚îÇ    - Il VALORE che verr√† inviato quando l'utente     ‚îÇ
                ‚îÇ      seleziona questa opzione                        ‚îÇ
                ‚îÇ    - Le graffe {} ci permettono di inserire          ‚îÇ
                ‚îÇ      JavaScript dentro JSX                           ‚îÇ
                ‚îÇ    - album.id = l'ID dell'album corrente (es. 1, 2..)‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ    ESEMPIO:                                           ‚îÇ
                ‚îÇ    Se album.id = 5                                    ‚îÇ
                ‚îÇ    Diventa: <option value="5">                       ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ    Quando l'utente seleziona questa opzione, il      ‚îÇ
                ‚îÇ    <select> avr√† value = 5                           ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ 2. key={album.id}                                     ‚îÇ
                ‚îÇ    - Identificatore UNICO per React                  ‚îÇ
                ‚îÇ    - OBBLIGATORIO quando si usa .map()               ‚îÇ
                ‚îÇ    - Aiuta React a capire quale elemento √® cambiato ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ    PERCH√â √à IMPORTANTE?                              ‚îÇ
                ‚îÇ    Immagina di avere 100 album. Se aggiungi un album‚îÇ
                ‚îÇ    alla posizione 50, senza key React dovrebbe       ‚îÇ
                ‚îÇ    ri-renderizzare TUTTI i 100 elementi. Con key,    ‚îÇ
                ‚îÇ    React sa che solo 1 elemento √® nuovo e           ‚îÇ
                ‚îÇ    ri-renderizza solo quello ‚Üí PERFORMANCE!          ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ    ‚ö†Ô∏è REGOLE PER key:                                ‚îÇ
                ‚îÇ    - Deve essere UNICO tra gli elementi fratelli     ‚îÇ
                ‚îÇ    - Deve essere STABILE (sempre lo stesso per lo    ‚îÇ
                ‚îÇ      stesso elemento)                                ‚îÇ
                ‚îÇ    - NON usare l'indice del .map() come key se       ‚îÇ
                ‚îÇ      l'ordine pu√≤ cambiare (album.id √® perfetto!)    ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ CONTENUTO DELL'OPTION:                               ‚îÇ
                ‚îÇ {album.title}                                         ‚îÇ
                ‚îÇ - Questo √® il TESTO VISIBILE nel menu a tendina      ‚îÇ
                ‚îÇ - Le graffe {} dicono a JSX: "questo √® JavaScript,   ‚îÇ
                ‚îÇ   eseguilo e mostra il risultato"                    ‚îÇ
                ‚îÇ - album.title = il titolo dell'album (es. "Vacanze") ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ ESEMPIO COMPLETO:                                    ‚îÇ
                ‚îÇ Se album = {                                          ‚îÇ
                ‚îÇ   id: 5,                                              ‚îÇ
                ‚îÇ   title: "Album di Vacanze",                         ‚îÇ
                ‚îÇ   userId: 1                                           ‚îÇ
                ‚îÇ }                                                     ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ L'HTML generato sar√†:                                ‚îÇ
                ‚îÇ <option value="5" key="5">                           ‚îÇ
                ‚îÇ   Album di Vacanze                                    ‚îÇ
                ‚îÇ </option>                                             ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ COSA VEDE L'UTENTE:                                  ‚îÇ
                ‚îÇ Nel menu a tendina apparir√†: "Album di Vacanze"      ‚îÇ
                ‚îÇ                                                       ‚îÇ
                ‚îÇ COSA OTTIENE IL CODICE:                              ‚îÇ
                ‚îÇ Se l'utente la seleziona, il <select> avr√† value="5" ‚îÇ
                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
              */}
              
              {album.title}
              {/* 
                Mostra il titolo dell'album come testo dell'opzione
                Esempio: "Album Vacanze", "Album Compleanno", ecc.
              */}
              
            </option>
            
          ))}
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ FINE DEL CICLO .map()                                     ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ A questo punto, tutte le opzioni sono state create.      ‚îÇ
            ‚îÇ Il menu a tendina conterr√† un'<option> per ogni album    ‚îÇ
            ‚îÇ presente nell'array "albums".                            ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
        </select>
        {/* Fine del <select> */}
        
      </div>
      {/* Fine del <div> che contiene label e select */}
      
    </form>
    {/* Fine del <form> */}
    
    
    
    
    {/* ====================================================================
        üë• SEZIONE 3: Lista degli Utenti
        ==================================================================== */}
    
    <h2>Users</h2>
    {/* 
      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
      ‚îÇ ELEMENTO H2 (Heading 2)                                           ‚îÇ
      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
      ‚îÇ H2 = titolo di secondo livello, usato per le sezioni della pagina ‚îÇ
      ‚îÇ Gerarchicamente sotto l'H1, ma sopra H3, H4, ecc.                 ‚îÇ
      ‚îÇ                                                                    ‚îÇ
      ‚îÇ In questo caso indica l'inizio della sezione "Utenti".            ‚îÇ
      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    */}
    
    
    <ul>
      {/* 
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ ELEMENTO UL (Unordered List)                                    ‚îÇ
        ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        ‚îÇ UL = lista NON ordinata (senza numeri).                        ‚îÇ
        ‚îÇ Ogni elemento della lista avr√† un "bullet point" (pallino).    ‚îÇ
        ‚îÇ                                                                 ‚îÇ
        ‚îÇ DIFFERENZA CON <OL>:                                           ‚îÇ
        ‚îÇ <ul> ‚Üí lista con pallini: ‚Ä¢ elemento 1, ‚Ä¢ elemento 2          ‚îÇ
        ‚îÇ <ol> ‚Üí lista con numeri:  1. elemento 1, 2. elemento 2        ‚îÇ
        ‚îÇ                                                                 ‚îÇ
        ‚îÇ Gli elementi della lista sono definiti con <li> (list item).   ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      */}
      
      
      
      
      {/* ------------------------------------------------------------------
          üîÑ Iterazione (Ciclo) sull'Array "users"
          ------------------------------------------------------------------ */}
      
      {users.map(user => (
        // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        // ‚îÇ CICLO CON .map() SULL'ARRAY "users"                           ‚îÇ
        // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        // ‚îÇ Stesso funzionamento del .map() precedente, ma questa volta   ‚îÇ
        // ‚îÇ cicliamo sull'array "users" invece che su "albums".           ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ PARAMETRO:                                                     ‚îÇ
        // ‚îÇ - user = l'utente CORRENTE del ciclo                          ‚îÇ
        // ‚îÇ          (un oggetto con: id, name, email, username, phone...) ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ESEMPIO:                                                       ‚îÇ
        // ‚îÇ Se users = [                                                   ‚îÇ
        // ‚îÇ   {id: 1, name: "Mario Rossi", email: "mario@email.com"...},  ‚îÇ
        // ‚îÇ   {id: 2, name: "Lucia Verdi", email: "lucia@email.com"...}   ‚îÇ
        // ‚îÇ ]                                                              ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ Allora verranno creati 2 elementi <li>, uno per Mario e       ‚îÇ
        // ‚îÇ uno per Lucia, con tutte le loro informazioni.                ‚îÇ
        // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        
        
        <li key={user.id}>
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO LI (List Item)                                     ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ LI = un singolo elemento della lista.                      ‚îÇ
            ‚îÇ Tutto ci√≤ che √® dentro <li> </li> rappresenta UN utente.   ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ATTRIBUTO key:                                              ‚îÇ
            ‚îÇ key={user.id} ‚Üí identificatore unico per React             ‚îÇ
            ‚îÇ Stesse regole del key visto prima con gli album.           ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* ------------------------------------------------------------
              üìù Visualizzazione del Nome Utente
              ------------------------------------------------------------ */}
          
          <strong>{user.name}</strong>
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO STRONG                                             ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ STRONG = testo con importanza semantica, mostrato in        ‚îÇ
            ‚îÇ grassetto (bold).                                           ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ DIFFERENZA TRA <strong> E <b>:                              ‚îÇ
            ‚îÇ <strong> ‚Üí grassetto + significato di "importante"         ‚îÇ
            ‚îÇ              (migliore per accessibilit√† e SEO)             ‚îÇ
            ‚îÇ <b>      ‚Üí solo grassetto visivo, senza significato        ‚îÇ
            ‚îÇ              semantico                                      ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ CONTENUTO:                                                  ‚îÇ
            ‚îÇ {user.name} = nome completo dell'utente                     ‚îÇ
            ‚îÇ Esempio: "Leanne Graham", "Ervin Howell", ecc.             ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Le graffe {} servono per "entrare" in modalit√† JavaScript  ‚îÇ
            ‚îÇ dentro JSX e accedere alla propriet√† "name" dell'oggetto   ‚îÇ
            ‚îÇ "user".                                                     ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {' - '}
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ SEPARATORE VISIVO                                           ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ {' - '} = una stringa JavaScript che contiene " - "        ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ PERCH√â LE GRAFFE E GLI APICI?                              ‚îÇ
            ‚îÇ In JSX, se vuoi inserire del testo normale, puoi scrivere: ‚îÇ
            ‚îÇ - Direttamente: <div>Testo</div>                           ‚îÇ
            ‚îÇ - Con JS: <div>{'Testo'}</div>                             ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ In questo caso usiamo {' - '} per essere espliciti che     ‚îÇ
            ‚îÇ vogliamo uno spazio prima e dopo il trattino.              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ RISULTATO VISIVO:                                          ‚îÇ
            ‚îÇ Mario Rossi - mario@email.com                               ‚îÇ
            ‚îÇ             ^^^                                             ‚îÇ
            ‚îÇ             questo separatore                               ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* ------------------------------------------------------------
              üìß Visualizzazione dell'Email
              ------------------------------------------------------------ */}
          
          <em>{user.email}</em>
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO EM (Emphasis)                                      ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ EM = testo con enfasi, mostrato in corsivo (italic).       ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ DIFFERENZA TRA <em> E <i>:                                  ‚îÇ
            ‚îÇ <em> ‚Üí corsivo + significato di "enfasi"                   ‚îÇ
            ‚îÇ         (migliore per accessibilit√† e SEO)                  ‚îÇ
            ‚îÇ <i>  ‚Üí solo corsivo visivo, senza significato semantico    ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ CONTENUTO:                                                  ‚îÇ
            ‚îÇ {user.email} = indirizzo email dell'utente                  ‚îÇ
            ‚îÇ Esempio: "Sincere@april.biz", "Shanna@melissa.tv", ecc.    ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* ------------------------------------------------------------
              üìÑ Paragrafo con Informazioni Aggiuntive
              ------------------------------------------------------------ */}
          
          <p>
            {/* 
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ELEMENTO P (Paragraph)                                    ‚îÇ
              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
              ‚îÇ P = paragrafo di testo. Crea automaticamente uno spazio   ‚îÇ
              ‚îÇ sopra e sotto il contenuto.                               ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ Qui dentro mettiamo informazioni aggiuntive sull'utente:  ‚îÇ
              ‚îÇ username, telefono, sito web.                             ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            */}
            
            
            Username: {user.username}
            {/* 
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ VISUALIZZAZIONE DELLO USERNAME                            ‚îÇ
              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
              ‚îÇ STRUTTURA:                                                ‚îÇ
              ‚îÇ "Username: " ‚Üí testo fisso (sempre uguale)               ‚îÇ
              ‚îÇ {user.username} ‚Üí dato dinamico (cambia per ogni utente) ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ESEMPIO:                                                  ‚îÇ
              ‚îÇ Se user.username = "Bret"                                 ‚îÇ
              ‚îÇ Risultato: Username: Bret                                 ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ Se user.username = "Antonette"                            ‚îÇ
              ‚îÇ Risultato: Username: Antonette                            ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            */}
            
            
            <br />
            {/* 
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ELEMENTO BR (Break)                                       ‚îÇ
              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
              ‚îÇ BR = interruzione di riga (line break), crea un "a capo".‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ √à un elemento "self-closing" (auto-chiudente):            ‚îÇ
              ‚îÇ - In HTML:  <br> (senza chiusura)                         ‚îÇ
              ‚îÇ - In JSX:   <br /> (con /, obbligatorio in JSX)           ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ EFFETTO:                                                  ‚îÇ
              ‚îÇ Username: Bret                                             ‚îÇ
              ‚îÇ Phone: 1-770-736-8031    ‚Üê va a capo qui                  ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ALTERNATIVA:                                              ‚îÇ
              ‚îÇ Invece di <br />, potresti mettere ogni informazione in   ‚îÇ
              ‚îÇ un <div> o <p> separato, ma <br /> √® pi√π semplice per    ‚îÇ
              ‚îÇ un singolo paragrafo con pi√π righe.                      ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            */}
            
            
            Phone: {user.phone}
            {/* 
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ VISUALIZZAZIONE DEL TELEFONO                              ‚îÇ
              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
              ‚îÇ {user.phone} = numero di telefono dell'utente             ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ESEMPIO:                                                  ‚îÇ
              ‚îÇ Se user.phone = "1-770-736-8031 x56442"                   ‚îÇ
              ‚îÇ Risultato: Phone: 1-770-736-8031 x56442                   ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ NOTA:                                                     ‚îÇ
              ‚îÇ I dati vengono dall'API JSONPlaceholder, quindi sono      ‚îÇ
              ‚îÇ telefoni fittizi per testing.                            ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            */}
            
            
            <br />
            {/* Altro a capo per andare alla riga successiva */}
            
            
            Website: <a href={`https://${user.website}`} target="_blank" rel="noopener noreferrer">
              {user.website}
            </a>
            {/* 
              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
              ‚îÇ ELEMENTO A (Anchor = Link)                                ‚îÇ
              ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
              ‚îÇ A = link cliccabile che porta a un'altra pagina.         ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ ATTRIBUTO 1: href                                         ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ href = "Hypertext REFerence" = l'URL di destinazione      ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ VALORE:                                                   ‚îÇ
              ‚îÇ {`https://${user.website}`}                               ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ SPIEGAZIONE DETTAGLIATA:                                  ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 1. Le graffe {} indicano: "questo √® JavaScript"          ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 2. I backtick ` ` creano un "template literal"           ‚îÇ
              ‚îÇ    (stringa con interpolazione di variabili)              ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 3. "https://" √® la parte fissa dell'URL                  ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 4. ${user.website} inserisce il sito dell'utente          ‚îÇ
              ‚îÇ    Il simbolo $ dice: "qui inserisci una variabile"      ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ESEMPIO:                                                  ‚îÇ
              ‚îÇ Se user.website = "hildegard.org"                         ‚îÇ
              ‚îÇ Diventa: href="https://hildegard.org"                     ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ Se user.website = "anastasia.net"                         ‚îÇ
              ‚îÇ Diventa: href="https://anastasia.net"                     ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ PERCH√â AGGIUNGIAMO "https://"?                            ‚îÇ
              ‚îÇ L'API fornisce solo "hildegard.org" senza protocollo.     ‚îÇ
              ‚îÇ Se mettessimo href={user.website}, il browser cercherebbe ‚îÇ
              ‚îÇ di aprire un file locale invece di andare su internet.   ‚îÇ
              ‚îÇ Con "https://", il browser sa che deve andare online.     ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ ATTRIBUTO 2: target                                       ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ target = dove aprire il link                              ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ VALORE: target="_blank"                                   ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ OPZIONI DISPONIBILI:                                      ‚îÇ
              ‚îÇ - "_blank"  ‚Üí apre in una NUOVA scheda/finestra          ‚îÇ
              ‚îÇ - "_self"   ‚Üí apre nella STESSA scheda (default)         ‚îÇ
              ‚îÇ - "_parent" ‚Üí apre nel frame genitore                    ‚îÇ
              ‚îÇ - "_top"    ‚Üí apre nella finestra principale             ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ PERCH√â USIAMO "_blank"?                                   ‚îÇ
              ‚îÇ Cos√¨ l'utente pu√≤ visitare il sito web senza perdere     ‚îÇ
              ‚îÇ la nostra applicazione. Miglior user experience!          ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ ATTRIBUTO 3: rel                                          ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ rel = "relationship" = relazione con la pagina collegata  ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ VALORE: rel="noopener noreferrer"                         ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ SPIEGAZIONE:                                              ‚îÇ
              ‚îÇ Quando si usa target="_blank", si creano potenziali       ‚îÇ
              ‚îÇ problemi di SICUREZZA. Questo attributo li risolve.      ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 1. "noopener"                                             ‚îÇ
              ‚îÇ    Impedisce alla nuova pagina di accedere alla finestra  ‚îÇ
              ‚îÇ    originale tramite window.opener.                       ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ    SENZA noopener (‚ö†Ô∏è PERICOLOSO):                        ‚îÇ
              ‚îÇ    La nuova pagina potrebbe eseguire:                     ‚îÇ
              ‚îÇ    window.opener.location = "https://sito-malevolo.com"  ‚îÇ
              ‚îÇ    ‚Üí Cambia l'URL della tua app senza che te ne accorgi! ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ    CON noopener (‚úÖ SICURO):                              ‚îÇ
              ‚îÇ    window.opener √® null ‚Üí la nuova pagina non pu√≤ fare    ‚îÇ
              ‚îÇ    nulla alla tua applicazione.                           ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ 2. "noreferrer"                                           ‚îÇ
              ‚îÇ    Impedisce di inviare l'header "Referer" alla pagina    ‚îÇ
              ‚îÇ    collegata.                                             ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ    COSA SIGNIFICA?                                        ‚îÇ
              ‚îÇ    Normalmente, quando clicchi un link, il browser dice   ‚îÇ
              ‚îÇ    al nuovo sito: "L'utente arriva da questa pagina".     ‚îÇ
              ‚îÇ    Con noreferrer, questa informazione non viene inviata. ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ    PERCH√â √à UTILE?                                        ‚îÇ
              ‚îÇ    - PRIVACY: il sito esterno non sa da dove arrivi       ‚îÇ
              ‚îÇ    - SICUREZZA: non esponi l'URL della tua app            ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ BEST PRACTICE:                                            ‚îÇ
              ‚îÇ target="_blank" ‚Üí SEMPRE insieme a rel="noopener noreferrer"‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ CONTENUTO DEL LINK                                        ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ {user.website}                                            ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ Questo √® il TESTO VISIBILE del link (il testo cliccabile).‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ESEMPIO:                                                  ‚îÇ
              ‚îÇ Se user.website = "hildegard.org"                         ‚îÇ
              ‚îÇ L'utente vedr√†: Website: hildegard.org (come link blu)    ‚îÇ
              ‚îÇ Cliccandoci, si aprir√† https://hildegard.org in una nuova ‚îÇ
              ‚îÇ scheda.                                                   ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ ESEMPIO COMPLETO                                          ‚îÇ
              ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ Se user.website = "hildegard.org"                         ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ L'HTML generato sar√†:                                     ‚îÇ
              ‚îÇ <a                                                        ‚îÇ
              ‚îÇ   href="https://hildegard.org"                            ‚îÇ
              ‚îÇ   target="_blank"                                         ‚îÇ
              ‚îÇ   rel="noopener noreferrer"                               ‚îÇ
              ‚îÇ >                                                         ‚îÇ
              ‚îÇ   hildegard.org                                           ‚îÇ
              ‚îÇ </a>                                                      ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ COSA VEDE L'UTENTE:                                       ‚îÇ
              ‚îÇ Website: hildegard.org (link blu sottolineato)            ‚îÇ
              ‚îÇ                                                            ‚îÇ
              ‚îÇ COSA SUCCEDE AL CLICK:                                    ‚îÇ
              ‚îÇ Si apre https://hildegard.org in una nuova scheda,        ‚îÇ
              ‚îÇ senza rischi di sicurezza e senza perdere l'app corrente. ‚îÇ
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
            */}
            
          </p>
          {/* Fine del paragrafo con le informazioni aggiuntive */}
          
        </li>
        // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        // ‚îÇ FINE DELL'ELEMENTO <li>                                       ‚îÇ
        // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        // ‚îÇ Questo blocco (da <li> a </li>) viene ripetuto per OGNI      ‚îÇ
        // ‚îÇ utente presente nell'array "users".                           ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ Se ci sono 10 utenti, verranno creati 10 <li> con tutte      ‚îÇ
        // ‚îÇ le informazioni di ogni singolo utente.                       ‚îÇ
        // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        
      ))}
      {/* 
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ FINE DEL CICLO .map()                                           ‚îÇ
        ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        ‚îÇ A questo punto, tutti gli utenti sono stati processati e        ‚îÇ
        ‚îÇ visualizzati nella lista.                                       ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      */}
      
    </ul>
    {/* Fine della lista utenti </ul> */}
    
    
    
    
    {/* ====================================================================
        üì∏ SEZIONE 4: Lista delle Foto
        ==================================================================== */}
    
    <h2>Photos</h2>
    {/* 
      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
      ‚îÇ TITOLO H2 PER LA SEZIONE FOTO                                     ‚îÇ
      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
      ‚îÇ Indica l'inizio della sezione dedicata alla visualizzazione       ‚îÇ
      ‚îÇ delle foto.                                                        ‚îÇ
      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    */}
    
    
    <ul>
      {/* 
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ LISTA NON ORDINATA PER LE FOTO                                  ‚îÇ
        ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        ‚îÇ Stessa struttura delle liste precedenti, ma questa volta ogni   ‚îÇ
        ‚îÇ <li> conterr√† una foto con titolo e immagine.                   ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      */}
      
      
      
      
      {/* ------------------------------------------------------------------
          üîÑ Iterazione (Ciclo) sull'Array "photos"
          ------------------------------------------------------------------ */}
      
      {photos.map(photo => (
        // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        // ‚îÇ CICLO CON .map() SULL'ARRAY "photos"                          ‚îÇ
        // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        // ‚îÇ .map() √® un metodo degli array che:                           ‚îÇ
        // ‚îÇ 1. CICLA su ogni elemento dell'array "photos"                 ‚îÇ
        // ‚îÇ 2. ESEGUE una funzione per ogni elemento                      ‚îÇ
        // ‚îÇ 3. RESTITUISCE un nuovo array con i risultati (in questo caso ‚îÇ
        // ‚îÇ    un array di elementi JSX <li>)                             ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
        // ‚îÇ PARAMETRI DELLA FUNZIONE                                      ‚îÇ
        // ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ photo = l'elemento CORRENTE del ciclo                         ‚îÇ
        // ‚îÇ         (un oggetto che rappresenta UNA foto)                 ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ STRUTTURA DI UN OGGETTO photo:                                ‚îÇ
        // ‚îÇ {                                                              ‚îÇ
        // ‚îÇ   id: 1,                  // ID univoco della foto            ‚îÇ
        // ‚îÇ   albumId: 1,             // A quale album appartiene         ‚îÇ
        // ‚îÇ   title: "accusamus...",  // Titolo/descrizione della foto    ‚îÇ
        // ‚îÇ   url: "https://...",     // URL dell'immagine grande         ‚îÇ
        // ‚îÇ   thumbnailUrl: "https://..." // URL della miniatura          ‚îÇ
        // ‚îÇ }                                                              ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
        // ‚îÇ COME FUNZIONA IL CICLO                                        ‚îÇ
        // ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ESEMPIO CON DATI REALI:                                       ‚îÇ
        // ‚îÇ Se photos = [                                                  ‚îÇ
        // ‚îÇ   {id: 1, title: "Foto Vacanza", thumbnailUrl: "url1.jpg"},   ‚îÇ
        // ‚îÇ   {id: 2, title: "Foto Mare", thumbnailUrl: "url2.jpg"},      ‚îÇ
        // ‚îÇ   {id: 3, title: "Foto Montagna", thumbnailUrl: "url3.jpg"}   ‚îÇ
        // ‚îÇ ]                                                              ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ Allora .map() esegue la funzione 3 volte:                     ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îÇ
        // ‚îÇ ‚îÇ PRIMA ITERAZIONE (ciclo 1/3)                               ‚îÇ‚îÇ
        // ‚îÇ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§‚îÇ
        // ‚îÇ ‚îÇ photo = {id: 1, title: "Foto Vacanza", ...}                ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ                                                             ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ Crea:                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ <li key="1">                                                ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   Foto Vacanza                                              ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   <img src="url1.jpg" alt="Foto Vacanza" />                ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ </li>                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îÇ
        // ‚îÇ ‚îÇ SECONDA ITERAZIONE (ciclo 2/3)                             ‚îÇ‚îÇ
        // ‚îÇ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§‚îÇ
        // ‚îÇ ‚îÇ photo = {id: 2, title: "Foto Mare", ...}                   ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ                                                             ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ Crea:                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ <li key="2">                                                ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   Foto Mare                                                 ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   <img src="url2.jpg" alt="Foto Mare" />                   ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ </li>                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê‚îÇ
        // ‚îÇ ‚îÇ TERZA ITERAZIONE (ciclo 3/3)                               ‚îÇ‚îÇ
        // ‚îÇ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§‚îÇ
        // ‚îÇ ‚îÇ photo = {id: 3, title: "Foto Montagna", ...}               ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ                                                             ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ Crea:                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ <li key="3">                                                ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   Foto Montagna                                             ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ   <img src="url3.jpg" alt="Foto Montagna" />               ‚îÇ‚îÇ
        // ‚îÇ ‚îÇ </li>                                                       ‚îÇ‚îÇ
        // ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ RISULTATO FINALE:                                             ‚îÇ
        // ‚îÇ Vengono create 3 righe nella lista, una per ogni foto.        ‚îÇ
        // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        
        
        
        
        /* ----------------------------------------------------------------
            üìå Elemento della Lista (LI) per ogni Foto
            ---------------------------------------------------------------- */
        
        <li key={photo.id}>
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO LI (List Item)                                     ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ Ogni <li> rappresenta UNA foto nell'elenco.                ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ ATTRIBUTO key                                               ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ key={photo.id}                                              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ PERCH√â √à OBBLIGATORIO?                                     ‚îÇ
            ‚îÇ React usa "key" per identificare quale elemento della lista ‚îÇ
            ‚îÇ √® cambiato, √® stato aggiunto o rimosso.                    ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ COSA SUCCEDEREBBE SENZA key?                               ‚îÇ
            ‚îÇ React non saprebbe quale <li> corrisponde a quale foto.    ‚îÇ
            ‚îÇ Se l'ordine cambia o aggiungi una foto, React dovrebbe     ‚îÇ
            ‚îÇ ri-renderizzare (ridisegnare) TUTTA la lista, anche gli    ‚îÇ
            ‚îÇ elementi che non sono cambiati ‚Üí PERFORMANCE PESSIME       ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ COSA SUCCEDE CON key?                                      ‚îÇ
            ‚îÇ React pu√≤ dire: "L'elemento con key=1 √® ancora qui, non    ‚îÇ
            ‚îÇ lo tocco. L'elemento key=4 √® nuovo, lo aggiungo."          ‚îÇ
            ‚îÇ Ri-renderizza solo gli elementi necessari ‚Üí VELOCE!        ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ REGOLE PER key                                              ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 1. ‚úÖ DEVE ESSERE UNICO tra gli elementi fratelli          ‚îÇ
            ‚îÇ    (ma pu√≤ ripetersi in liste diverse)                     ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 2. ‚úÖ DEVE ESSERE STABILE (sempre lo stesso per lo stesso  ‚îÇ
            ‚îÇ    elemento, anche dopo re-render)                         ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 3. ‚ùå NON usare l'indice del .map() come key               ‚îÇ
            ‚îÇ    (solo se l'ordine non cambia mai e non ci sono         ‚îÇ
            ‚îÇ    aggiunte/rimozioni)                                     ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ PERCH√â photo.id √à PERFETTO COME key?                       ‚îÇ
            ‚îÇ - √à unico (ogni foto ha un ID diverso)                     ‚îÇ
            ‚îÇ - √à stabile (l'ID della foto non cambia mai)               ‚îÇ
            ‚îÇ - Viene dal database (garantito univoco dal server)        ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ö†Ô∏è NOTA IMPORTANTE:                                        ‚îÇ
            ‚îÇ La prop "key" NON √® accessibile nel componente!            ‚îÇ
            ‚îÇ Non puoi fare: console.log(props.key) ‚Üê questo √® undefined ‚îÇ
            ‚îÇ √à usata solo internamente da React.                        ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* --------------------------------------------------------------
              üìù Visualizzazione del Titolo della Foto
              -------------------------------------------------------------- */}
          
          {photo.title}
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ VISUALIZZAZIONE DEL TITOLO                                  ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ {photo.title} = accediamo alla propriet√† "title" dell'oggetto‚îÇ
            ‚îÇ "photo" corrente.                                           ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ LE GRAFFE {}:                                               ‚îÇ
            ‚îÇ In JSX, le graffe servono per "uscire" dalla modalit√† HTML  ‚îÇ
            ‚îÇ ed "entrare" nella modalit√† JavaScript.                     ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO SENZA GRAFFE (‚ùå sbagliato):                        ‚îÇ
            ‚îÇ <li>photo.title</li>                                        ‚îÇ
            ‚îÇ ‚Üí Mostra letteralmente il testo "photo.title"              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO CON GRAFFE (‚úÖ corretto):                          ‚îÇ
            ‚îÇ <li>{photo.title}</li>                                      ‚îÇ
            ‚îÇ ‚Üí Esegue il codice JavaScript photo.title e mostra il      ‚îÇ
            ‚îÇ   risultato (es. "Una bella foto di un gatto")             ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO CONCRETO:                                           ‚îÇ
            ‚îÇ Se photo.title = "accusamus beatae ad facilis"              ‚îÇ
            ‚îÇ Allora verr√† visualizzato: accusamus beatae ad facilis      ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Il titolo viene mostrato come testo normale sopra           ‚îÇ
            ‚îÇ l'immagine della foto.                                      ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
          
          
          
          {/* --------------------------------------------------------------
              üñºÔ∏è Visualizzazione dell'Immagine (Thumbnail)
              -------------------------------------------------------------- */}
          
          <img 
            src={photo.thumbnailUrl} 
            alt={photo.title} 
          />
          {/* 
            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
            ‚îÇ ELEMENTO IMG (Image)                                        ‚îÇ
            ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
            ‚îÇ IMG = elemento per mostrare un'immagine nella pagina.      ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ √à un elemento SELF-CLOSING (auto-chiudente):               ‚îÇ
            ‚îÇ - In HTML: <img src="..." alt="...">                       ‚îÇ
            ‚îÇ - In JSX:  <img src="..." alt="..." />  ‚Üê nota lo /        ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ ATTRIBUTO 1: src (source)                                   ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ src = l'URL dell'immagine da mostrare                       ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ VALORE: src={photo.thumbnailUrl}                            ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ SPIEGAZIONE:                                                ‚îÇ
            ‚îÇ - Le graffe {} indicano: "questo √® JavaScript"             ‚îÇ
            ‚îÇ - photo.thumbnailUrl = l'URL della miniatura della foto    ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ PERCH√â "thumbnail" E NON "url"?                            ‚îÇ
            ‚îÇ L'oggetto photo ha DUE URL:                                ‚îÇ
            ‚îÇ 1. url ‚Üí immagine GRANDE (es. 600x600 pixel)              ‚îÇ
            ‚îÇ 2. thumbnailUrl ‚Üí miniatura PICCOLA (es. 150x150 pixel)   ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Usiamo thumbnailUrl perch√©:                                ‚îÇ
            ‚îÇ - Si carica PI√ô VELOCEMENTE (file pi√π piccolo)            ‚îÇ
            ‚îÇ - Risparmia BANDA (importante su mobile)                   ‚îÇ
            ‚îÇ - √à sufficiente per un'anteprima in una lista              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO:                                                   ‚îÇ
            ‚îÇ Se photo.thumbnailUrl = "https://via.placeholder.com/150"  ‚îÇ
            ‚îÇ Diventa: <img src="https://via.placeholder.com/150" .../>  ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ ATTRIBUTO 2: alt (alternative text)                         ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ alt = testo alternativo che descrive l'immagine             ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ VALORE: alt={photo.title}                                   ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ A COSA SERVE?                                              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 1. ACCESSIBILIT√Ä:                                          ‚îÇ
            ‚îÇ    Gli screen reader (software per non vedenti) leggono    ‚îÇ
            ‚îÇ    questo testo ad alta voce per descrivere l'immagine.    ‚îÇ
            ‚îÇ    Esempio: "Immagine: Una bella foto di un gatto"         ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 2. FALLBACK (piano B):                                     ‚îÇ
            ‚îÇ    Se l'immagine NON si carica (URL errato, connessione    ‚îÇ
            ‚îÇ    lenta, immagine rimossa), il browser mostra il testo    ‚îÇ
            ‚îÇ    alt invece di un'icona di immagine rotta.               ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 3. SEO (Search Engine Optimization):                       ‚îÇ
            ‚îÇ    Google e altri motori di ricerca leggono l'attributo    ‚îÇ
            ‚îÇ    alt per capire cosa rappresenta l'immagine e           ‚îÇ
            ‚îÇ    indicizzarla nelle ricerche per immagini.               ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ 4. CONTESTO:                                               ‚îÇ
            ‚îÇ    Se l'utente naviga con le immagini disabilitate (per    ‚îÇ
            ‚îÇ    risparmiare dati), vede comunque una descrizione.       ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ö†Ô∏è IMPORTANTE:                                             ‚îÇ
            ‚îÇ L'attributo alt √® OBBLIGATORIO per un HTML valido e per   ‚îÇ
            ‚îÇ garantire l'accessibilit√†. Non va mai omesso!              ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ESEMPIO:                                                   ‚îÇ
            ‚îÇ Se photo.title = "Gatto che dorme"                          ‚îÇ
            ‚îÇ Diventa: <img ... alt="Gatto che dorme" />                 ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Se l'immagine non si carica, l'utente vedr√† il testo:      ‚îÇ
            ‚îÇ "Gatto che dorme" al posto dell'immagine.                  ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ ESEMPIO COMPLETO                                           ‚îÇ
            ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ Se photo = {                                                ‚îÇ
            ‚îÇ   id: 5,                                                    ‚îÇ
            ‚îÇ   title: "Una bella foto di un gatto",                      ‚îÇ
            ‚îÇ   thumbnailUrl: "https://example.com/cat-thumb.jpg"        ‚îÇ
            ‚îÇ }                                                           ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ L'HTML generato sar√†:                                      ‚îÇ
            ‚îÇ <img                                                        ‚îÇ
            ‚îÇ   src="https://example.com/cat-thumb.jpg"                  ‚îÇ
            ‚îÇ   alt="Una bella foto di un gatto"                         ‚îÇ
            ‚îÇ />                                                          ‚îÇ
            ‚îÇ                                                             ‚îÇ
            ‚îÇ COSA VEDE L'UTENTE:                                        ‚îÇ
            ‚îÇ - Se l'immagine si carica: vede la foto del gatto          ‚îÇ
            ‚îÇ - Se non si carica: vede "Una bella foto di un gatto"      ‚îÇ
            ‚îÇ - Se usa uno screen reader: sente "Immagine: Una bella     ‚îÇ
            ‚îÇ   foto di un gatto"                                         ‚îÇ
            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
          */}
          
        </li>
        // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        // ‚îÇ FINE DELL'ELEMENTO <li>                                       ‚îÇ
        // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        // ‚îÇ Questo blocco (da <li key={photo.id}> a </li>) viene         ‚îÇ
        // ‚îÇ ripetuto per OGNI foto presente nell'array "photos".          ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ Se ci sono 50 foto nell'array, verranno creati 50 elementi   ‚îÇ
        // ‚îÇ <li>, ognuno con il titolo e l'immagine della propria foto.  ‚îÇ
        // ‚îÇ                                                                ‚îÇ
        // ‚îÇ PROCESSO:                                                     ‚îÇ
        // ‚îÇ 1. .map() prende la prima foto ‚Üí crea il primo <li>          ‚îÇ
        // ‚îÇ 2. .map() prende la seconda foto ‚Üí crea il secondo <li>      ‚îÇ
        // ‚îÇ 3. ... continua per tutte le foto                            ‚îÇ
        // ‚îÇ 4. Tutti gli <li> vengono inseriti dentro <ul>               ‚îÇ
        // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        
      ))}
      {/* 
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ FINE DEL CICLO .map()                                           ‚îÇ
        ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
        ‚îÇ A questo punto, tutte le foto sono state processate.            ‚îÇ
        ‚îÇ Il metodo .map() ha ciclato su ogni foto nell'array "photos" e  ‚îÇ
        ‚îÇ ha creato un elemento <li> per ognuna di esse.                  ‚îÇ
        ‚îÇ                                                                  ‚îÇ
        ‚îÇ RIEPILOGO:                                                      ‚îÇ
        ‚îÇ .map() ha trasformato un array di OGGETTI (dati) in un array   ‚îÇ
        ‚îÇ di ELEMENTI JSX (componenti visivi).                            ‚îÇ
        ‚îÇ                                                                  ‚îÇ
        ‚îÇ PRIMA (array di oggetti):                                       ‚îÇ
        ‚îÇ [                                                                ‚îÇ
        ‚îÇ   {id: 1, title: "Foto 1", thumbnailUrl: "url1.jpg"},          ‚îÇ
        ‚îÇ   {id: 2, title: "Foto 2", thumbnailUrl: "url2.jpg"}           ‚îÇ
        ‚îÇ ]                                                                ‚îÇ
        ‚îÇ                                                                  ‚îÇ
        ‚îÇ DOPO (array di elementi JSX):                                   ‚îÇ
        ‚îÇ [                                                                ‚îÇ
        ‚îÇ   <li key="1">Foto 1 <img src="url1.jpg" alt="Foto 1" /></li>, ‚îÇ
        ‚îÇ   <li key="2">Foto 2 <img src="url2.jpg" alt="Foto 2" /></li>  ‚îÇ
        ‚îÇ ]                                                                ‚îÇ
        ‚îÇ                                                                  ‚îÇ
        ‚îÇ React prende questo array di elementi JSX e li inserisce nel   ‚îÇ
        ‚îÇ DOM (la struttura HTML della pagina), creando la lista visibile.‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      */}
      
    </ul>
    {/* 
      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
      ‚îÇ FINE DELLA LISTA <ul>                                             ‚îÇ
      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
      ‚îÇ La lista non ordinata <ul> si chiude qui.                         ‚îÇ
      ‚îÇ Tutti gli elementi <li> creati dal .map() sono ora dentro questa  ‚îÇ
      ‚îÇ <ul>, formando una lista visiva completa di tutte le foto.        ‚îÇ
      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    */}
    
  </>
  // ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
  // ‚îÇ FINE DEL FRAGMENT                                                   ‚îÇ
  // ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
  // ‚îÇ Il Fragment React (<> </>) si chiude qui.                           ‚îÇ
  // ‚îÇ Tutto ci√≤ che √® contenuto nel Fragment viene restituito come un     ‚îÇ
  // ‚îÇ unico "blocco" al chiamante (React), che lo renderizzer√† nel DOM.   ‚îÇ
  // ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
  
)
// ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
// ‚îÇ FINE DEL RETURN                                                       ‚îÇ
// ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
// ‚îÇ La keyword "return" termina qui.                                      ‚îÇ
// ‚îÇ Tutto ci√≤ che √® stato restituito (il JSX dentro il Fragment) verr√†   ‚îÇ
// ‚îÇ trasformato da React in HTML reale e mostrato nel browser.            ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ PROCESSO COMPLETO:                                                    ‚îÇ
// ‚îÇ 1. React chiama la funzione App()                                     ‚îÇ
// ‚îÇ 2. La funzione esegue gli useEffect (fetch dei dati)                 ‚îÇ
// ‚îÇ 3. Quando i dati sono pronti, React ri-chiama la funzione            ‚îÇ
// ‚îÇ 4. La funzione esegue il return con tutto il JSX                     ‚îÇ
// ‚îÇ 5. React converte il JSX in HTML                                      ‚îÇ
// ‚îÇ 6. L'HTML viene inserito nel DOM                                      ‚îÇ
// ‚îÇ 7. Il browser mostra la pagina all'utente                            ‚îÇ
// ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò


}
// ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
// ‚îÇ FINE DELLA FUNZIONE App                                               ‚îÇ
// ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
// ‚îÇ La funzione App() termina qui.                                        ‚îÇ
// ‚îÇ Questa √® una funzione "componente" React: riceve props (in questo    ‚îÇ
// ‚îÇ caso nessuna) e restituisce JSX da visualizzare.                      ‚îÇ
// ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò





// ============================================================================
// üì§ SEZIONE 5: ESPORTAZIONE DEL COMPONENTE
// ============================================================================
// Questa sezione rende il componente App disponibile ad altri file


export default App
// ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
// ‚îÇ EXPORT DEFAULT                                                        ‚îÇ
// ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
// ‚îÇ "export default" esporta il componente App come esportazione          ‚îÇ
// ‚îÇ PREDEFINITA (default) di questo file.                                 ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ COSA SIGNIFICA "ESPORTARE"?                                           ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ In JavaScript moderno (ES6+), ogni file √® un "modulo" separato.      ‚îÇ
// ‚îÇ Per usare funzioni/variabili di un file in un altro file, devi       ‚îÇ
// ‚îÇ ESPORTARLE dal primo file e IMPORTARLE nel secondo.                   ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ANALOGIA:                                                             ‚îÇ
// ‚îÇ Immagina che ogni file sia una scatola chiusa. Per passare qualcosa  ‚îÇ
// ‚îÇ da una scatola all'altra, devi:                                       ‚îÇ
// ‚îÇ 1. EXPORT = mettere l'oggetto fuori dalla scatola                    ‚îÇ
// ‚îÇ 2. IMPORT = prenderlo e portarlo nell'altra scatola                  ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ DUE TIPI DI EXPORT                                                    ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 1. EXPORT DEFAULT (quello che usiamo qui)                            ‚îÇ
// ‚îÇ    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ                          ‚îÇ
// ‚îÇ    Ogni file pu√≤ avere UN SOLO export default.                       ‚îÇ
// ‚îÇ    √à l'esportazione "principale" del file.                           ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    SINTASSI:                                                          ‚îÇ
// ‚îÇ    export default NomeComponente;                                     ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    COME SI IMPORTA (in un altro file):                               ‚îÇ
// ‚îÇ    import App from './App.jsx';                                       ‚îÇ
// ‚îÇ    import QualunqueNome from './App.jsx';  ‚Üê puoi scegliere il nome! ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    NOTA: con default export, puoi usare qualsiasi nome durante       ‚îÇ
// ‚îÇ    l'import, ma per convenzione si usa lo stesso nome.               ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 2. EXPORT NAMED (esportazione nominata)                              ‚îÇ
// ‚îÇ    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ                              ‚îÇ
// ‚îÇ    Puoi avere MOLTI export named in un file.                         ‚îÇ
// ‚îÇ    Ogni esportazione ha un nome specifico.                           ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    SINTASSI:                                                          ‚îÇ
// ‚îÇ    export const funzione1 = () => {...};                              ‚îÇ
// ‚îÇ    export const funzione2 = () => {...};                              ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    COME SI IMPORTA (in un altro file):                               ‚îÇ
// ‚îÇ    import { funzione1, funzione2 } from './file.js';                  ‚îÇ
// ‚îÇ    import { funzione1 as f1 } from './file.js';  ‚Üê rinomina con "as" ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ    NOTA: con named export, DEVI usare il nome esatto (o rinominare   ‚îÇ
// ‚îÇ    con "as").                                                         ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ ESEMPIO COMPLETO DEL NOSTRO CASO                                     ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ FILE: App.jsx                                                         ‚îÇ
// ‚îÇ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ
// ‚îÇ function App() {                                                      ‚îÇ
// ‚îÇ   return <h1>Ciao!</h1>;                                              ‚îÇ
// ‚îÇ }                                                                     ‚îÇ
// ‚îÇ export default App;  ‚Üê esportiamo il componente                      ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ FILE: main.jsx (file che USA il componente App)                      ‚îÇ
// ‚îÇ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ
// ‚îÇ import App from './App.jsx';  ‚Üê importiamo il componente             ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ReactDOM.createRoot(document.getElementById('root')).render(          ‚îÇ
// ‚îÇ   <App />  ‚Üê usiamo il componente importato                          ‚îÇ
// ‚îÇ );                                                                    ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ PERCH√â √à IMPORTANTE?                                                 ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 1. MODULARIT√Ä:                                                       ‚îÇ
// ‚îÇ    Ogni componente sta in un file separato ‚Üí codice organizzato      ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 2. RIUSABILIT√Ä:                                                      ‚îÇ
// ‚îÇ    Puoi importare lo stesso componente in pi√π file                   ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 3. MANUTENIBILIT√Ä:                                                   ‚îÇ
// ‚îÇ    √à pi√π facile trovare e modificare il codice                       ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ 4. TREE SHAKING:                                                     ‚îÇ
// ‚îÇ    I build tool (Vite, Webpack) possono rimuovere il codice non     ‚îÇ
// ‚îÇ    usato ‚Üí bundle pi√π piccolo e veloce                               ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ SENZA EXPORT/IMPORT (vecchio modo)                                   ‚îÇ
// ‚îÇ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ Prima di ES6, tutto il codice JavaScript veniva caricato in un       ‚îÇ
// ‚îÇ unico scope globale usando <script> tag:                             ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ <script src="file1.js"></script>                                      ‚îÇ
// ‚îÇ <script src="file2.js"></script>                                      ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ PROBLEMI:                                                            ‚îÇ
// ‚îÇ - Conflitti di nomi (se file1.js e file2.js hanno una variabile     ‚îÇ
// ‚îÇ   con lo stesso nome, si sovrascrivono)                              ‚îÇ
// ‚îÇ - Difficile gestire le dipendenze (quale file deve essere caricato   ‚îÇ
// ‚îÇ   prima?)                                                             ‚îÇ
// ‚îÇ - Inquinamento dello scope globale                                   ‚îÇ
// ‚îÇ                                                                        ‚îÇ
// ‚îÇ Con export/import, ogni file √® isolato e devi esplicitamente         ‚îÇ
// ‚îÇ dichiarare cosa condividere ‚Üí molto pi√π sicuro e gestibile!          ‚îÇ
// ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò


// ============================================================================
// üéâ FINE DEL FILE App.jsx
// ============================================================================
// 
// RIEPILOGO COMPLETO:
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// 
// Questo file definisce un COMPONENTE REACT chiamato "App" che:
// 
// 1. GESTISCE LO STATO (useState) per:
//    - Lista di album
//    - Lista di utenti
//    - Lista di foto
// 
// 2. RECUPERA DATI (useEffect + fetch) da un'API esterna:
//    - https://jsonplaceholder.typicode.com/albums
//    - https://jsonplaceholder.typicode.com/users
//    - https://jsonplaceholder.typicode.com/photos?_limit=10
// 
// 3. VISUALIZZA (JSX) nell'interfaccia:
//    - Un titolo "Albums"
//    - Un menu a tendina per selezionare un album
//    - Una lista di utenti con nome, email, username, telefono, sito web
//    - Una lista di foto con titolo e miniatura
// 
// 4. USA TECNICHE REACT:
//    - Hooks (useState, useEffect)
//    - Rendering condizionale
//    - Liste dinamiche (.map())
//    - Props (key)
//    - Async/await per chiamate API
// 
// 5. VIENE ESPORTATO per essere usato in altri file (main.jsx)
// 
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
